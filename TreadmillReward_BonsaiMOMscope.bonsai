<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.6.3"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:vid="clr-namespace:Bonsai.Video;assembly=Bonsai.Video"
                 xmlns:cv="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:scr="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting"
                 xmlns:osc="clr-namespace:Bonsai.Osc;assembly=Bonsai.Osc"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="vid:VideoCaptureDevice">
          <vid:Index>0</vid:Index>
          <vid:Format>
            <vid:FrameSize>
              <vid:Width>640</vid:Width>
              <vid:Height>480</vid:Height>
            </vid:FrameSize>
            <vid:AverageFrameRate>300</vid:AverageFrameRate>
            <vid:MaximumFrameRate>300</vid:MaximumFrameRate>
            <vid:BitCount>24</vid:BitCount>
          </vid:Format>
          <vid:CaptureProperties />
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:MaskPolygon">
          <cv:Regions>
            <cv:ArrayOfPoint>
              <cv:Point>
                <cv:X>530</cv:X>
                <cv:Y>248</cv:Y>
              </cv:Point>
              <cv:Point>
                <cv:X>606</cv:X>
                <cv:Y>248</cv:Y>
              </cv:Point>
              <cv:Point>
                <cv:X>606</cv:X>
                <cv:Y>336</cv:Y>
              </cv:Point>
              <cv:Point>
                <cv:X>530</cv:X>
                <cv:Y>336</cv:Y>
              </cv:Point>
            </cv:ArrayOfPoint>
          </cv:Regions>
          <cv:MaskType>ToZero</cv:MaskType>
          <cv:FillValue>
            <cv:Val0>0</cv:Val0>
            <cv:Val1>0</cv:Val1>
            <cv:Val2>0</cv:Val2>
            <cv:Val3>0</cv:Val3>
          </cv:FillValue>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:Grayscale" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:Threshold">
          <cv:ThresholdValue>128</cv:ThresholdValue>
          <cv:MaxValue>255</cv:MaxValue>
          <cv:ThresholdType>Binary</cv:ThresholdType>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:FindContours">
          <cv:Mode>External</cv:Mode>
          <cv:Method>ChainApproxNone</cv:Method>
          <cv:Offset>
            <cv:X>0</cv:X>
            <cv:Y>0</cv:Y>
          </cv:Offset>
          <cv:MinArea xsi:nil="true" />
          <cv:MaxArea xsi:nil="true" />
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:BinaryRegionAnalysis" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:LargestBinaryRegion" />
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Area</Selector>
      </Expression>
      <Expression xsi:type="GreaterThan">
        <Operand xsi:type="DoubleProperty">
          <Value>1000</Value>
        </Operand>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Skip">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Zip" />
      </Expression>
      <Expression xsi:type="scr:PythonTransform">
        <scr:Script>@returns(bool)
def process(value):
  if value[0] == 0 and value[1] == 1:
    return True
  elif value[0] == 1 and value[1] == 0:
    return True
  else:
    return False</scr:Script>
      </Expression>
      <Expression xsi:type="Condition">
        <Description>True</Description>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="scr:ExpressionTransform">
        <scr:Expression>1</scr:Expression>
      </Expression>
      <Expression xsi:type="osc:SendMessage">
        <osc:Connection>MATLAB</osc:Connection>
        <osc:Address>/</osc:Address>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
      <Edge From="1" To="2" Label="Source1" />
      <Edge From="2" To="3" Label="Source1" />
      <Edge From="3" To="4" Label="Source1" />
      <Edge From="4" To="5" Label="Source1" />
      <Edge From="5" To="6" Label="Source1" />
      <Edge From="6" To="7" Label="Source1" />
      <Edge From="7" To="8" Label="Source1" />
      <Edge From="8" To="9" Label="Source1" />
      <Edge From="8" To="10" Label="Source1" />
      <Edge From="9" To="10" Label="Source2" />
      <Edge From="10" To="11" Label="Source1" />
      <Edge From="11" To="12" Label="Source1" />
      <Edge From="12" To="13" Label="Source1" />
      <Edge From="13" To="14" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>